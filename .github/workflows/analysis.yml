name: CI/CD

on:
  push:
    branches: [ "**" ]
    paths:
      -'src/analysis/**'
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  pages: write

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -el {0}    
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2

    - name: Build
      run: ./gradlew build

    - name: Load
      run: ./gradlew owlLoad

    - name: Set up R
      uses: eddelbuettel/github-actions/r2u-setup@master

    - name: Install Dependencies
      run: |
        chmod +x src/analysis/SetUpEnvironment.sh 
        ./src/analysis/SetUpEnvironment.sh

    - name: Set up Quarto
      uses: quarto-dev/quarto-actions/setup@v2
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Check Quarto
      shell: bash -l {0}
      run: |
        quarto -V


    - name: Setup Anaconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        activate-environment: py39
        environment-file: environment.yml
        python-version: 3.9
        auto-activate-base: false

    - name: Check Conda
      run: |
        conda info
        conda list

    - name: Render Jupyter
      shell: bash -l {0}
      run: |
        python -m nbconvert --output="analysisJupyter" --output-dir='./web' --execute --to html src/analysis/analysisShell.ipynb --no-input

    - name: Render Quarto
      shell: bash -l {0}
      run: |
        quarto render src/analysis/analysisShell.qmd
  
    - name: Copy Quarto html
      shell: bash -l {0}
      run: |
        cp ./src/analysis/analysisShell.html ./web  

    - name: Render Index 
      shell: bash -l {0}
      run: |
        quarto render src/quarto/index.qmd

    - name: Copy Index html
      shell: bash -l {0}
      run: |
        cp ./src/quarto/index.html ./web  
  
    - name: Publish
      uses: actions/upload-pages-artifact@v1
      with:
        path: web/
        
                
  # Deploy job
  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1 # or specific "vX.X.X" version tag for this action

        