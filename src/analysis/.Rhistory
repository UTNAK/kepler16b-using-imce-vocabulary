from poliastro.twobody import Orbit
from poliastro.maneuver import Maneuver
from poliastro.util import norm
import numpy as np
# Rocket parameters
g0 = 9.81 * u.m / u.s**2  # Standard gravity
# Initial Payload mass
m_init = 1000 * u.kg
I_sp = 350 * u.s  # Specific impulse
# Define the orbits
leo = Orbit.circular(Earth, alt=400 * u.km)
geo = Orbit.circular(Earth, alt=35786 * u.km)
# Calculate the Hohmann transfer maneuver
hohmann_maneuver = Maneuver.hohmann(leo, geo.a)
ss_a, ss_f = leo.apply_maneuver(hohmann_maneuver, intermediate=True)
print(f"Hohmann transfer maneuvers: {hohmann_maneuver.impulses}")
# Calculate the total delta-v
total_delta_v = sum(norm(dv) for (_, dv) in hohmann_maneuver.impulses)
print(f"Total delta-v: {total_delta_v}")
# total_delta_v = norm(hohmann_maneuver.impulses[1][1])
# print(f"Total delta-v: {total_delta_v}")
Earth
from astropy import units as u
from poliastro.bodies import Earth
import os
print("PYTHONPATH:", os.environ.get('PYTHONPATH'))
print("PATH:", os.environ.get('PATH'))
import os
print("PYTHONPATH:", os.environ.get('PYTHONPATH'))
print("PATH:", os.environ.get('PATH'))
import os
print("PYTHONPATH:", os.environ.get('PYTHONPATH'))
print("PATH:", os.environ.get('PATH'))
from astropy import units as u
from poliastro.bodies import Earth
from poliastro.twobody import Orbit
from poliastro.maneuver import Maneuver
from poliastro.util import norm
import numpy as np
# Rocket parameters
g0 = 9.81 * u.m / u.s**2  # Standard gravity
# Initial Payload mass
m_init = 1000 * u.kg
I_sp = 350 * u.s  # Specific impulse
# Define the orbits
leo = Orbit.circular(Earth, alt=400 * u.km)
geo = Orbit.circular(Earth, alt=35786 * u.km)
# Calculate the Hohmann transfer maneuver
hohmann_maneuver = Maneuver.hohmann(leo, geo.a)
ss_a, ss_f = leo.apply_maneuver(hohmann_maneuver, intermediate=True)
print(f"Hohmann transfer maneuvers: {hohmann_maneuver.impulses}")
# Calculate the total delta-v
total_delta_v = sum(norm(dv) for (_, dv) in hohmann_maneuver.impulses)
print(f"Total delta-v: {total_delta_v}")
# total_delta_v = norm(hohmann_maneuver.impulses[1][1])
# print(f"Total delta-v: {total_delta_v}")
import os
print("PYTHONPATH:", os.environ.get('PYTHONPATH'))
print("PATH:", os.environ.get('PATH'))
reticulate::repl_python()
initOrbit <- 400 # km
targetOrbit <- 36000 #km
targetOrbit <- 36000 #km
re + targetOrbit
initOrbit <- 400 # km
targetOrbit <- 36000 #km
# 計算条件
GM <- 398600.4354360959 # 地球の重力定数, km3/s2
re <- 6378.1366 # 地球半径 km
initOrbit <- 400 # km
targetOrbit <- 36000 #km
rp <- re + initOrbit  # LEOの軌道半径, km
re + targetOrbit
targetOrbit <- 35786 #km
rp <- re + initOrbit  # LEOの軌道半径, km
ra <- 42164 # GEOの軌道半径, km
re + targetOrbit
initOrbit <- 400 # km
targetOrbit <- 35786 #km
rp <- re + initOrbit  # LEOの軌道半径, km
ra <- re + targetOrbit # GEOの軌道半径, km
# LEOの軌道速度とGEOの軌道速度
v_LEO <- sqrt(GM/rp) * sqrt(2*rp/(rp+rp)) # 円軌道なので近点半径・遠点半径共にrp
v_GEO <- np.sqrt(GM/ra) * sqrt(2*ra/(ra+ra)) # 円軌道なので近点半径・遠点半径共にra
v_GEO <- sqrt(GM/ra) * sqrt(2*ra/(ra+ra)) # 円軌道なので近点半径・遠点半径共にra
# ホーマン遷移軌道の速度
vp = sqrt(GM/rp) * sqrt(2*ra/(rp+ra))
va = sqrt(GM/ra) * sqrt(2*rp/(rp+ra))
# ΔV計算
dv1 = vp-v_LEO
dv2 = v_GEO-va
print(dv1, dv2)
dv1
dv2
print(dv1, dv2)
?print
print(c(dv1, dv2))
reticulate::repl_python()
# Tsiolkovsky rocket equation
m_init = 1000 # kg
g0 = 9.81   # Standard gravity
I_sp = 350  # Specific impulse
m_final = m_init / exp(dv / (I_sp * g0))
m_fuel = m_init - m_final
print("m_init:", m_init)
?print
?sprintf
sprintf("m_init: %f", m_init)
sprintf("m_final: %f", m_final)
sprintf("m_fuel: %f", m_fuel)
sprintf("m_init: %f", m_init)
sprintf("m_final: %f", m_final)
sprintf("m_fuel: %f", m_fuel)
dv
m_final = m_init / exp(dv*1000 / (I_sp * g0))
m_fuel = m_init - m_final
sprintf("m_init: %f", m_init)
sprintf("m_final: %f", m_final)
sprintf("m_fuel: %f", m_fuel)
sprintf("m_init: %f", m_init)
sprintf("m_final: %f", m_final)
sprintf("m_fuel: %f", m_fuel)
# Tsiolkovsky rocket equation
m_init = 4800 # kg
g0 = 9.81   # Standard gravity
I_sp = 350  # Specific impulse
m_final = m_init / exp(dv*1000 / (I_sp * g0))
m_fuel = m_init - m_final
sprintf("m_init: %f", m_init)
sprintf("m_final: %f", m_final)
sprintf("m_fuel: %f", m_fuel)
# Tsiolkovsky rocket equation
m_init = 4800 # kg
g0 = 9.81   # Standard gravity
I_sp = 350  # Specific impulse
m_final = m_init / exp(dv*1000 / (I_sp * g0))
m_fuel = m_init - m_final
sprintf("m_init: %f", m_init)
sprintf("m_final: %f", m_final)
sprintf("m_fuel: %f", m_fuel)
# Tsiolkovsky rocket equation
m_init = 1000 # kg
g0 = 9.81   # Standard gravity
I_sp = 350  # Specific impulse
m_final = m_init / exp(dv*1000 / (I_sp * g0))
m_fuel = m_init - m_final
sprintf("m_init: %f", m_init)
sprintf("m_final: %f", m_final)
sprintf("m_fuel: %f", m_fuel)
dv
dv = 3.3
m_final = m_init / exp(dv*1000 / (I_sp * g0))
m_fuel = m_init - m_final
sprintf("m_init: %f", m_init)
sprintf("m_final: %f", m_final)
sprintf("m_fuel: %f", m_fuel)
g0*I_sp
# Tsiolkovsky rocket equation
m_init = 1000 # kg
g0 = 9.81   # Standard gravity
I_sp = 350  # Specific impulse
dv = 3.3
m_final = m_init / exp(dv*1000 / (I_sp * g0))
m_fuel = m_init - m_final
sprintf("m_init: %f", m_init)
sprintf("m_final: %f", m_final)
sprintf("m_fuel: %f", m_fuel)
# Tsiolkovsky rocket equation
m_init = 1000 # kg
g0 = 9.81   # Standard gravity
I_sp = 350  # Specific impulse
m_final = m_init / exp(dv*1000 / (I_sp * g0))
m_fuel = m_init - m_final
sprintf("m_init: %f", m_init)
sprintf("m_final: %f", m_final)
sprintf("m_fuel: %f", m_fuel)
calcFuelMass <- function(dv=3.3, m_init=1000, I_sp=350){
# Tsiolkovsky rocket equation
g0 = 9.81   # Standard gravity u.m / u.s**2
m_init = 1000 # kg
I_sp = 350  # Specific impulse s
dv = 3.3 # delta V km/s
m_final = m_init / exp(dv*1000 / (I_sp * g0))
m_fuel = m_init - m_final
sprintf("m_init: %f", m_init)
sprintf("m_final: %f", m_final)
sprintf("m_fuel: %f", m_fuel)
return(m_fuel, m_final)
}
calcFuelMass
calcFuelMass()
calcFuelMass()
calcFuelMass <- function(dv=3.3, m_init=1000, I_sp=350){
# Tsiolkovsky rocket equation
g0 = 9.81   # Standard gravity u.m / u.s**2
m_init = 1000 # kg
I_sp = 350  # Specific impulse s
dv = 3.3 # delta V km/s
m_final = m_init / exp(dv*1000 / (I_sp * g0))
m_fuel = m_init - m_final
sprintf("m_init: %f", m_init)
sprintf("m_final: %f", m_final)
sprintf("m_fuel: %f", m_fuel)
}
calcFuelMass()
return(m_fuel)
calcFuelMass <- function(dv=3.3, m_init=1000, I_sp=350){
# Tsiolkovsky rocket equation
g0 = 9.81   # Standard gravity u.m / u.s**2
m_init = 1000 # kg
I_sp = 350  # Specific impulse s
dv = 3.3 # delta V km/s
m_final = m_init / exp(dv*1000 / (I_sp * g0))
m_fuel = m_init - m_final
sprintf("m_init: %f", m_init)
sprintf("m_final: %f", m_final)
sprintf("m_fuel: %f", m_fuel)
return(m_fuel)
}
m_fuel
calcDeltaV <- function(initOrbit=400, targetOrbit = 35786){
# 計算条件
GM <- 398600.4354360959 # 地球の重力定数, km3/s2
re <- 6378.1366 # 地球半径 km
initOrbit <- 400 # km
targetOrbit <- 35786 #km
rp <- re + initOrbit  # LEOの軌道半径, km
ra <- re + targetOrbit # GEOの軌道半径, km
# LEOの軌道速度とGEOの軌道速度
v_LEO <- sqrt(GM/rp) * sqrt(2*rp/(rp+rp)) # 円軌道なので近点半径・遠点半径共にrp
v_GEO <- sqrt(GM/ra) * sqrt(2*ra/(ra+ra)) # 円軌道なので近点半径・遠点半径共にra
# ホーマン遷移軌道の速度
vp = sqrt(GM/rp) * sqrt(2*ra/(rp+ra))
va = sqrt(GM/ra) * sqrt(2*rp/(rp+ra))
# ΔV計算
dv1 = vp-v_LEO
dv2 = v_GEO-va
print(c(dv1, dv2))
dv = dv1 + dv2
return(dv)
}
calcDeltaV <- function(initOrbit=400, targetOrbit = 35786){
# 計算条件
GM <- 398600.4354360959 # 地球の重力定数, km3/s2
re <- 6378.1366 # 地球半径 km
# initOrbit <- 400 # km
# targetOrbit <- 35786 #km
rp <- re + initOrbit  # LEOの軌道半径, km
ra <- re + targetOrbit # GEOの軌道半径, km
# LEOの軌道速度とGEOの軌道速度
v_LEO <- sqrt(GM/rp) * sqrt(2*rp/(rp+rp)) # 円軌道なので近点半径・遠点半径共にrp
v_GEO <- sqrt(GM/ra) * sqrt(2*ra/(ra+ra)) # 円軌道なので近点半径・遠点半径共にra
# ホーマン遷移軌道の速度
vp = sqrt(GM/rp) * sqrt(2*ra/(rp+ra))
va = sqrt(GM/ra) * sqrt(2*rp/(rp+ra))
# ΔV計算
dv1 = vp-v_LEO
dv2 = v_GEO-va
print(c(dv1, dv2))
dv = dv1 + dv2
return(dv)
}
calcDeltaV <- function(initOrbit=400, targetOrbit = 35786){
# Circular Orbit, Haumann transfer
# Constant
GM <- 398600.4354360959 # 地球の重力定数, km3/s2
re <- 6378.1366 # 地球半径 km
# initOrbit <- 400 # km
# targetOrbit <- 35786 #km
rp <- re + initOrbit  # LEOの軌道半径, km
ra <- re + targetOrbit # GEOの軌道半径, km
# LEOの軌道速度とGEOの軌道速度
v_LEO <- sqrt(GM/rp) * sqrt(2*rp/(rp+rp)) # 円軌道なので近点半径・遠点半径共にrp
v_GEO <- sqrt(GM/ra) * sqrt(2*ra/(ra+ra)) # 円軌道なので近点半径・遠点半径共にra
# ホーマン遷移軌道の速度
vp = sqrt(GM/rp) * sqrt(2*ra/(rp+ra))
va = sqrt(GM/ra) * sqrt(2*rp/(rp+ra))
# ΔV計算
dv1 = vp-v_LEO
dv2 = v_GEO-va
print(c(dv1, dv2))
dv = dv1 + dv2
return(dv)
}
calcFuelMass <- function(dv=3.3, m_init=1000, I_sp=350){
# Tsiolkovsky rocket equation
g0 = 9.81   # Standard gravity u.m / u.s**2
m_init = 1000 # kg
I_sp = 350  # Specific impulse s
dv = 3.3 # delta V km/s
m_final = m_init / exp(dv*1000 / (I_sp * g0))
m_fuel = m_init - m_final
sprintf("m_init: %f", m_init)
sprintf("m_final: %f", m_final)
sprintf("m_fuel: %f", m_fuel)
return(m_fuel)
}
dv <- calcDeltaV(initOrbit=400, targetOrbit = 35786)
m_fuel <- calcFuelMass(dv, m_init, I_sp)
dv
calcFuelMass <- function(dv=3.3, m_init=1000, I_sp=350){
# Tsiolkovsky rocket equation
g0 = 9.81   # Standard gravity u.m / u.s**2
m_init = 1000 # kg
I_sp = 350  # Specific impulse s
dv = 3.3 # delta V km/s
m_final = m_init / exp(dv*1000 / (I_sp * g0))
m_fuel = m_init - m_final
sprintf("m_init: %f", m_init)
sprintf("m_final: %f", m_final)
sprintf("m_fuel: %f", m_fuel)
return(m_fuel)
}
m_fuel <- calcFuelMass(dv, m_init, I_sp)
m_fuel
m_final <- m_init - m_fuel
dv <- calcDeltaV(initOrbit=400, targetOrbit = 35786)
m_fuel <- calcFuelMass(dv, m_init, I_sp)
m_final <- m_init - m_fuel
calcFuelMass <- function(dv=3.3, m_dry=1000, I_sp=350){
# Tsiolkovsky rocket equation
g0 = 9.81   # Standard gravity u.m / u.s**2
m_init = 1000 # kg
I_sp = 350  # Specific impulse s
dv = 3.3 # delta V km/s
m_wet = m_dry * exp(dv*1000 / (I_sp * g0))
m_fuel = m_wet - m_dry
sprintf("m_dry: %f", m_dry)
sprintf("m_wet: %f", m_wet)
sprintf("m_fuel: %f", m_fuel)
return(m_fuel)
}
calcFuelMass()
reticulate::repl_python()
dv <- calcDeltaV(initOrbit=400, targetOrbit = 35786)
m_fuel <- calcFuelMass(dv, m_init, I_sp)
m_final <- m_init - m_fuel
m_init
m_fuel
m_final
m_fuel
calcFuelMass <- function(dv=3.3, m_dry=1000, I_sp=350){
# Tsiolkovsky rocket equation
g0 = 9.81   # Standard gravity u.m / u.s**2
m_init = 1000 # kg
I_sp = 350  # Specific impulse s
dv = 3.3 # delta V km/s
# m_final = m_init / exp(dv*1000 / (I_sp * g0))
# m_fuel = m_init - m_final
m_wet = m_dry * exp(dv*1000 / (I_sp * g0))
m_fuel = m_wet - m_dry
sprintf("m_dry: %f", m_dry)
sprintf("m_wet: %f", m_wet)
sprintf("m_fuel: %f", m_fuel)
return(m_fuel)
}
calcFuelMass()
# Tsiolkovsky rocket equation
g0 = 9.81   # Standard gravity u.m / u.s**2
m_init = 1614.619 # kg
I_sp = 350  # Specific impulse s
dv = 3.3 # delta V km/s
m_final = m_init / exp(dv*1000 / (I_sp * g0))
m_fuel = m_init - m_final
sprintf("m_init: %f", m_init)
sprintf("m_final: %f", m_final)
sprintf("m_fuel: %f", m_fuel)
# Tsiolkovsky rocket equation
g0 = 9.81   # Standard gravity u.m / u.s**2
m_init = 1000 # kg
I_sp = 350  # Specific impulse s
dv = 3.3 # delta V km/s
m_wet = m_dry * exp(dv*1000 / (I_sp * g0))
m_fuel = m_wet - m_dry
calcDryMass <- function(dv=3.3, m_wet=1000, I_sp=350){
# Tsiolkovsky rocket equation
g0 = 9.81   # Standard gravity u.m / u.s**2
m_init = 1000 # kg
I_sp = 350  # Specific impulse s
dv = 3.3 # delta V km/s
# m_final = m_init / exp(dv*1000 / (I_sp * g0))
# m_fuel = m_init - m_final
m_dry = m_wet / exp(dv*1000 / (I_sp * g0))
m_fuel = m_wet - m_dry
sprintf("m_dry: %f", m_dry)
sprintf("m_wet: %f", m_wet)
sprintf("m_fuel: %f", m_fuel)
return(m_dry)
}
calcDryMass(dv, 1614.619, I_sp)
calcDryMass(dv, 1614.619, I_sp)
calcWetMass(dv, 1000.000, I_sp)
calcDryMass <- function(dv=3.3, m_wet=1000, I_sp=350){
# Tsiolkovsky rocket equation
g0 = 9.81   # Standard gravity u.m / u.s**2
m_init = 1000 # kg
I_sp = 350  # Specific impulse s
dv = 3.3 # delta V km/s
# m_final = m_init / exp(dv*1000 / (I_sp * g0))
# m_fuel = m_init - m_final
m_dry = m_wet / exp(dv*1000 / (I_sp * g0))
m_fuel = m_wet - m_dry
sprintf("m_dry: %f", m_dry)
sprintf("m_wet: %f", m_wet)
sprintf("m_fuel: %f", m_fuel)
return(m_dry)
}
calcDryMass(dv, 1614.619, I_sp)
calcWetMass(dv, 1000.000, I_sp)
calcWetMass <- function(dv=3.3, m_dry=1000, I_sp=350){
# Tsiolkovsky rocket equation
g0 = 9.81   # Standard gravity u.m / u.s**2
m_init = 1000 # kg
I_sp = 350  # Specific impulse s
dv = 3.3 # delta V km/s
# m_final = m_init / exp(dv*1000 / (I_sp * g0))
# m_fuel = m_init - m_final
m_wet = m_dry * exp(dv*1000 / (I_sp * g0))
m_fuel = m_wet - m_dry
sprintf("m_dry: %f", m_dry)
sprintf("m_wet: %f", m_wet)
sprintf("m_fuel: %f", m_fuel)
return(m_fuel)
}
calcDryMass <- function(dv=3.3, m_wet=1000, I_sp=350){
# Tsiolkovsky rocket equation
g0 = 9.81   # Standard gravity u.m / u.s**2
m_init = 1000 # kg
I_sp = 350  # Specific impulse s
dv = 3.3 # delta V km/s
# m_final = m_init / exp(dv*1000 / (I_sp * g0))
# m_fuel = m_init - m_final
m_dry = m_wet / exp(dv*1000 / (I_sp * g0))
m_fuel = m_wet - m_dry
sprintf("m_dry: %f", m_dry)
sprintf("m_wet: %f", m_wet)
sprintf("m_fuel: %f", m_fuel)
return(m_dry)
}
calcDryMass(dv, 1614.619, I_sp)
calcWetMass(dv, 1000.000, I_sp)
calcDryMass(dv, 1614.619, I_sp)
calcWetMass(dv, 1000.000, I_sp)
calcDryMass(dv, 1614.619, I_sp)
calcWetMass(dv, 1000.000, I_sp)
calcWetMass <- function(dv=3.3, m_dry=1000, I_sp=350){
# Tsiolkovsky rocket equation
g0 = 9.81   # Standard gravity u.m / u.s**2
m_wet = m_dry * exp(dv*1000.0 / (I_sp * g0))
m_fuel = m_wet - m_dry
sprintf("m_dry: %f", m_dry)
sprintf("m_wet: %f", m_wet)
sprintf("m_fuel: %f", m_fuel)
return(m_fuel)
}
calcDryMass <- function(dv=3.3, m_wet=1000, I_sp=350){
# Tsiolkovsky rocket equation
g0 = 9.81   # Standard gravity u.m / u.s**2
# m_final = m_init / exp(dv*1000 / (I_sp * g0))
# m_fuel = m_init - m_final
m_dry = m_wet / exp(dv*1000.0 / (I_sp * g0))
m_fuel = m_wet - m_dry
sprintf("m_dry: %f", m_dry)
sprintf("m_wet: %f", m_wet)
sprintf("m_fuel: %f", m_fuel)
return(m_dry)
}
# Tsiolkovsky rocket equation
g0 = 9.81   # Standard gravity u.m / u.s**2
m_init = 1614.619 # kg
I_sp = 350  # Specific impulse s
dv = 3.3 # delta V km/s
m_final = m_init / exp(dv*1000 / (I_sp * g0))
m_fuel = m_init - m_final
sprintf("m_init: %f", m_init)
sprintf("m_final: %f", m_final)
sprintf("m_fuel: %f", m_fuel)
calcDryMass(dv, 1614.619, I_sp)
calcWetMass(dv, 1000.000, I_sp)
calcWetMass <- function(dv=3.3, m_dry=1000, I_sp=350){
# Tsiolkovsky rocket equation
g0 = 9.81   # Standard gravity u.m / u.s**2
m_wet = m_dry * exp(dv*1000.0 / (I_sp * g0))
m_fuel = m_wet - m_dry
sprintf("m_dry: %f", m_dry)
sprintf("m_wet: %f", m_wet)
sprintf("m_fuel: %f", m_fuel)
return(m_wet)
}
# Tsiolkovsky rocket equation
g0 = 9.81   # Standard gravity u.m / u.s**2
m_init = 1614.619 # kg
I_sp = 350  # Specific impulse s
dv = 3.3 # delta V km/s
m_final = m_init / exp(dv*1000 / (I_sp * g0))
m_fuel = m_init - m_final
sprintf("m_init: %f", m_init)
sprintf("m_final: %f", m_final)
sprintf("m_fuel: %f", m_fuel)
calcDryMass(dv, 1614.619, I_sp)
calcWetMass(dv, 1000.000, I_sp)
m_wet = m_dry * exp(dv*1000.0 / (I_sp * g0))
m_dry=1000
m_wet = m_dry * exp(dv*1000.0 / (I_sp * g0))
m_wet
calcWetMass(dv, 1000.000, I_sp)
calcDryMass(dv, 1614.619, I_sp)
calcDryMass(dv, 1000.000, I_sp)
calcWetMass(dv, 1000.000, I_sp)
calcDryMass(dv, 1000.000, I_sp)
calcWetMass(dv, 1000.000, I_sp)
reticulate::repl_python()
